syntax = "proto3";

option java_package = "com.derbysoft.nuke.dlm.model";
option java_outer_classname = "Protobuf";

message RegisterRequest {
    Header header = 1;
    string resourceId = 2;
    string permitName = 3;
    string permitSpec = 4;
}

message RegisterResponse {
    Header header = 1;
    string resourceId = 2;
    string errorMessage = 3;
    bool successful = 4;
}

message UnRegisterRequest {
    Header header = 1;
    string resourceId = 2;
}

message UnRegisterResponse {
    Header header = 1;
    string resourceId = 2;
    string errorMessage = 3;
    bool successful = 4;
}

message ExistingRequest {
    Header header = 1;
    string resourceId = 2;
}

message ExistingResponse {
    Header header = 1;
    string resourceId = 2;
    string errorMessage = 3;
    bool existing = 4;
}

message AcquireRequest {
    Header header = 1;
    string resourceId = 2;
}

message AcquireResponse {
    Header header = 1;
    string resourceId = 2;
    string errorMessage = 3;
}

message TryAcquireRequest {
    Header header = 1;
    string resourceId = 2;
    int64 timeout = 3;
    enum TIME_UNIT {
        DAYS = 0;
        HOURS = 1;
        MICROSECONDS = 2;
        MILLISECONDS = 3;
        MINUTES = 4;
        NANOSECONDS = 5;
        SECONDS = 6;
    }
    TIME_UNIT timeUnit = 4;
}

message TryAcquireResponse {
    Header header = 1;
    string resourceId = 2;
    string errorMessage = 3;
    bool successful = 4;
}

message ReleaseRequest {
    Header header = 1;
    string resourceId = 2;
}

message ReleaseResponse {
    Header header = 1;
    string resourceId = 2;
    string errorMessage = 3;
}

message PingRequest {
    string echo = 1;
}

message PingResponse {
    string echo = 1;
}

message Request {
    enum RequestType {
        REGISTER_REQUEST = 0;
        UNREGISTER_REQUEST = 1;
        EXISTING_REQUEST = 2;
        ACQUIRE_REQUEST = 3;
        TRY_ACQUIRE_REQUEST = 4;
        RELEASE_REQUEST = 5;
        PING_REQUEST = 6;
    }

    RequestType type = 1;
    RegisterRequest registerRequest = 2;
    UnRegisterRequest unRegisterRequest = 3;
    ExistingRequest existingRequest = 4;
    AcquireRequest acquireRequest = 5;
    TryAcquireRequest tryAcquireRequest = 6;
    ReleaseRequest releaseRequest = 7;
    PingRequest pingRequest = 8;
}

message Response {
    enum ResponseType {
        REGISTER_RESPONSE = 0;
        UNREGISTER_RESPONSE = 1;
        EXISTING_RESPONSE = 2;
        ACQUIRE_RESPONSE = 3;
        TRY_ACQUIRE_RESPONSE = 4;
        RELEASE_RESPONSE = 5;
        PING_RESPONSE = 6;
    }

    ResponseType type = 1;
    RegisterResponse registerResponse = 2;
    UnRegisterResponse unRegisterResponse = 3;
    ExistingResponse existingResponse = 4;
    AcquireResponse acquireResponse = 5;
    TryAcquireResponse tryAcquireResponse = 6;
    ReleaseResponse releaseResponse = 7;
    PingResponse pingResponse = 8;
}

message Header {
    string transactionId = 1;
}